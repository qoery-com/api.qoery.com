paths:
  /scrape:
    get:
      summary: Structured Web Scrape (query string)
      description: Download a web page and structured data using query parameters. This is a convenience alias of POST.
      tags:
        - Web Scraping
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: url
          description: Target page URL
          schema:
            type: string
            format: uri
        - in: query
          name: html
          description: Include page HTML inline in response
          schema:
            type: boolean
            default: false
        - in: query
          name: markdown
          description: Include page markdown inline in response
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '../schemas/schemas.yaml#/components/schemas/ScrapeResponse'
        '400':
          description: Invalid URL or scraping failed
          content:
            application/json:
              schema:
                $ref: '../schemas/schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          $ref: '../responses/responses.yaml#/components/responses/UnauthorizedError'
        '429':
          $ref: '../responses/responses.yaml#/components/responses/RateLimitError'
    post:
      summary: Structured Web Scrape
      description: Download a web page, and structured data as time series. Use query params `html=true` and/or `markdown=true` to include raw artifacts inline; otherwise artifact URLs are provided in `artifacts`.
      tags:
        - Web Scraping
      security:
        - ApiKeyAuth: []
      requestBody:
        required: false
        description: Provide JSON body or use query parameter 'url'. Body takes precedence.
        content:
          application/json:
            schema:
              $ref: '../schemas/schemas.yaml#/components/schemas/URLRequest'
      parameters:
        - in: query
          name: html
          description: Include page HTML inline in response
          schema:
            type: boolean
            default: false
        - in: query
          name: markdown
          description: Include page markdown inline in response
          schema:
            type: boolean
            default: false
      x-codeSamples:
        - lang: Python
          source: # INJECT: python/scrape_example.py
        - lang: JavaScript
          source: # INJECT: js/scrape_example.js
        - lang: cURL
          source: # INJECT: curl/scrape_example.sh
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '../schemas/schemas.yaml#/components/schemas/ScrapeResponse'
              example:
                html: "<html><body><table>...</table></body></html>"
                markdown: "# Page Title\n\n| Year | Value |\n|---|---:|\n| 2018 | 460000 |\n| 2019 | 455000 |"
                series:
                  - series_id: "co2_france"
                    name: "CO2 â€” France"
                    unit: "kg"
                    observations:
                      - date: "2018-01-01"
                        value: 460000.0
                      - date: "2019-01-01"
                        value: 455000.0
                artifacts:
                  html_url: "https://example.com/run/raw.html"
                  markdown_url: "https://example.com/run/processed.md"
                  tables_base_url: "https://example.com/run/raw/"
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Maximum requests allowed per time window
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: Number of requests remaining in current window
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Unix timestamp when the rate limit resets
            X-RateLimit-Window:
              schema:
                type: integer
              description: Time window in seconds
            X-Concurrent-Limit:
              schema:
                type: integer
              description: Maximum concurrent requests allowed
            X-Concurrent-Current:
              schema:
                type: integer
              description: Current number of concurrent requests
        '400':
          description: Invalid URL or scraping failed
          content:
            application/json:
              schema:
                $ref: '../schemas/schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          $ref: '../responses/responses.yaml#/components/responses/UnauthorizedError'
        '429':
          $ref: '../responses/responses.yaml#/components/responses/RateLimitError'
