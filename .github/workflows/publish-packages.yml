name: Publish Packages

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v0.2.4, v1.0.0, etc.

permissions:
  contents: write   # needed to create GitHub Releases
  pages: write      # needed to deploy GitHub Pages via actions
  id-token: write   # needed by deploy-pages OIDC

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: |
          cd sdks/js
          npm ci
      
      - name: Build package
        run: |
          cd sdks/js
          npm run build || echo "No build script found, skipping build"
      
      - name: Publish to NPM
        run: |
          cd sdks/js
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Notify success
        run: echo "âœ… NPM package published successfully!"

  publish-pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build Python package
        run: |
          cd sdks/python-sdk
          python -m build
      
      - name: Publish to PyPI
        run: |
          cd sdks/python-sdk
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      
      - name: Notify success
        run: echo "âœ… PyPI package published successfully!"

  create-github-release:
    runs-on: ubuntu-latest
    needs: [publish-npm, publish-pypi]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$GITHUB_REF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: |
            ## ðŸš€ Release ${{ steps.get_version.outputs.version }}
            
            ### ðŸ“¦ Packages Published
            - **NPM**: `qoery@${{ steps.get_version.outputs.version }}`
            - **PyPI**: `qoery==${{ steps.get_version.outputs.version }}`
            
            ### ðŸ†• What's New
            - Added plot2table endpoint for chart-to-data conversion
            - Updated API documentation and examples
            - Improved SDK consistency across all endpoints
            
            ### ðŸ“š Installation
            
            **NPM:**
            ```bash
            npm install qoery@${{ steps.get_version.outputs.version }}
            ```
            
            **PyPI:**
            ```bash
            pip install qoery==${{ steps.get_version.outputs.version }}
            ```
            
            ### ðŸ”— Documentation
            - [API Documentation](https://api.qoery.com)
            - [NPM Package](https://www.npmjs.com/package/qoery)
            - [PyPI Package](https://pypi.org/project/qoery/)
          draft: false
          prerelease: false

  deploy-pages:
    runs-on: ubuntu-latest
    needs: [create-github-release]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
