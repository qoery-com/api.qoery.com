/**
 * qoery's API
 * Every number on the internet, queryable. Instant access to millions of trusted statistics through a single natural language query or API call. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: samuel.tinnerholm@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import QueryNlPost400Response from '../model/QueryNlPost400Response';
import ScrapePost200Response from '../model/ScrapePost200Response';

/**
* WebScraping service.
* @module api/WebScrapingApi
* @version 0.1.0
*/
export default class WebScrapingApi {

    /**
    * Constructs a new WebScrapingApi. 
    * @alias module:api/WebScrapingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the scrapePost operation.
     * @callback module:api/WebScrapingApi~scrapePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScrapePost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Structured Web Scrape
     * Download a web page, and structured data as time series. Use query params `html=true` and/or `markdown=true` to include raw artifacts inline; otherwise artifact URLs are provided in `artifacts`.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [html = false)] Include page HTML inline in response
     * @param {Boolean} [markdown = false)] Include page markdown inline in response
     * @param {module:api/WebScrapingApi~scrapePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScrapePost200Response}
     */
    scrapePost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'html': opts['html'],
        'markdown': opts['markdown']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ScrapePost200Response;
      return this.apiClient.callApi(
        '/scrape', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
