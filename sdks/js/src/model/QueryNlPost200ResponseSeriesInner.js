/**
 * qoery's API
 * Every number on the internet, queryable. Instant access to millions of trusted statistics through a single natural language query or API call.  # Installation  ### Python SDK  Install from PyPI:  ```bash pip install qoery ```  PyPI: [qoery](https://pypi.org/project/qoery/)  ### JavaScript SDK  Install from npm:  ```bash npm install qoery ```  npm: [qoery](https://www.npmjs.com/package/qoery) 
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: samuel.tinnerholm@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryNlPost200ResponseSeriesInnerEntity from './QueryNlPost200ResponseSeriesInnerEntity';
import QueryNlPost200ResponseSeriesInnerMetric from './QueryNlPost200ResponseSeriesInnerMetric';
import QueryNlPost200ResponseSeriesInnerObservationsInner from './QueryNlPost200ResponseSeriesInnerObservationsInner';
import QueryNlPost200ResponseSeriesInnerSource from './QueryNlPost200ResponseSeriesInnerSource';
import QueryNlPost200ResponseSeriesInnerUnit from './QueryNlPost200ResponseSeriesInnerUnit';

/**
 * The QueryNlPost200ResponseSeriesInner model module.
 * @module model/QueryNlPost200ResponseSeriesInner
 * @version 0.2.0
 */
class QueryNlPost200ResponseSeriesInner {
    /**
     * Constructs a new <code>QueryNlPost200ResponseSeriesInner</code>.
     * A logical group of observations sharing the same entity/metric/unit
     * @alias module:model/QueryNlPost200ResponseSeriesInner
     * @param entity {module:model/QueryNlPost200ResponseSeriesInnerEntity} 
     * @param metric {module:model/QueryNlPost200ResponseSeriesInnerMetric} 
     * @param source {module:model/QueryNlPost200ResponseSeriesInnerSource} 
     * @param observations {Array.<module:model/QueryNlPost200ResponseSeriesInnerObservationsInner>} The ordered observations for this series
     */
    constructor(entity, metric, source, observations) { 
        
        QueryNlPost200ResponseSeriesInner.initialize(this, entity, metric, source, observations);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entity, metric, source, observations) { 
        obj['entity'] = entity;
        obj['metric'] = metric;
        obj['source'] = source;
        obj['observations'] = observations;
    }

    /**
     * Constructs a <code>QueryNlPost200ResponseSeriesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryNlPost200ResponseSeriesInner} obj Optional instance to populate.
     * @return {module:model/QueryNlPost200ResponseSeriesInner} The populated <code>QueryNlPost200ResponseSeriesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryNlPost200ResponseSeriesInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('entity')) {
                obj['entity'] = QueryNlPost200ResponseSeriesInnerEntity.constructFromObject(data['entity']);
            }
            if (data.hasOwnProperty('metric')) {
                obj['metric'] = QueryNlPost200ResponseSeriesInnerMetric.constructFromObject(data['metric']);
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = QueryNlPost200ResponseSeriesInnerUnit.constructFromObject(data['unit']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = QueryNlPost200ResponseSeriesInnerSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = ApiClient.convertToType(data['frequency'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': Object});
            }
            if (data.hasOwnProperty('observations')) {
                obj['observations'] = ApiClient.convertToType(data['observations'], [QueryNlPost200ResponseSeriesInnerObservationsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryNlPost200ResponseSeriesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryNlPost200ResponseSeriesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueryNlPost200ResponseSeriesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `entity`
        if (data['entity']) { // data not null
          QueryNlPost200ResponseSeriesInnerEntity.validateJSON(data['entity']);
        }
        // validate the optional field `metric`
        if (data['metric']) { // data not null
          QueryNlPost200ResponseSeriesInnerMetric.validateJSON(data['metric']);
        }
        // validate the optional field `unit`
        if (data['unit']) { // data not null
          QueryNlPost200ResponseSeriesInnerUnit.validateJSON(data['unit']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          QueryNlPost200ResponseSeriesInnerSource.validateJSON(data['source']);
        }
        // ensure the json data is a string
        if (data['frequency'] && !(typeof data['frequency'] === 'string' || data['frequency'] instanceof String)) {
            throw new Error("Expected the field `frequency` to be a primitive type in the JSON string but got " + data['frequency']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['observations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['observations'])) {
                throw new Error("Expected the field `observations` to be an array in the JSON data but got " + data['observations']);
            }
            // validate the optional field `observations` (array)
            for (const item of data['observations']) {
                QueryNlPost200ResponseSeriesInnerObservationsInner.validateJSON(item);
            };
        }

        return true;
    }


}

QueryNlPost200ResponseSeriesInner.RequiredProperties = ["entity", "metric", "source", "observations"];

/**
 * ID of the series
 * @member {String} id
 */
QueryNlPost200ResponseSeriesInner.prototype['id'] = undefined;

/**
 * Human-readable name of the series
 * @member {String} name
 */
QueryNlPost200ResponseSeriesInner.prototype['name'] = undefined;

/**
 * @member {module:model/QueryNlPost200ResponseSeriesInnerEntity} entity
 */
QueryNlPost200ResponseSeriesInner.prototype['entity'] = undefined;

/**
 * @member {module:model/QueryNlPost200ResponseSeriesInnerMetric} metric
 */
QueryNlPost200ResponseSeriesInner.prototype['metric'] = undefined;

/**
 * @member {module:model/QueryNlPost200ResponseSeriesInnerUnit} unit
 */
QueryNlPost200ResponseSeriesInner.prototype['unit'] = undefined;

/**
 * @member {module:model/QueryNlPost200ResponseSeriesInnerSource} source
 */
QueryNlPost200ResponseSeriesInner.prototype['source'] = undefined;

/**
 * Frequency of the time series (e.g., monthly, annual)
 * @member {String} frequency
 */
QueryNlPost200ResponseSeriesInner.prototype['frequency'] = undefined;

/**
 * Description of the series
 * @member {String} description
 */
QueryNlPost200ResponseSeriesInner.prototype['description'] = undefined;

/**
 * Additional labels and metadata at the series level
 * @member {Object.<String, Object>} labels
 */
QueryNlPost200ResponseSeriesInner.prototype['labels'] = undefined;

/**
 * The ordered observations for this series
 * @member {Array.<module:model/QueryNlPost200ResponseSeriesInnerObservationsInner>} observations
 */
QueryNlPost200ResponseSeriesInner.prototype['observations'] = undefined;






export default QueryNlPost200ResponseSeriesInner;

