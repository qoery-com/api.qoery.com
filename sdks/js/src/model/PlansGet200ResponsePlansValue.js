/**
 * qoery's API
 * Every number on the internet, queryable. Instant access to millions of trusted statistics through a single natural language query or API call.  # Installation  ### Python SDK  Install from PyPI:  ```bash pip install qoery ```  PyPI: [qoery](https://pypi.org/project/qoery/)  ### JavaScript SDK  Install from npm:  ```bash npm install qoery ```  npm: [qoery](https://www.npmjs.com/package/qoery) 
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: samuel.tinnerholm@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlansGet200ResponsePlansValueApiKeys from './PlansGet200ResponsePlansValueApiKeys';
import PlansGet200ResponsePlansValueMonthlyPrice from './PlansGet200ResponsePlansValueMonthlyPrice';

/**
 * The PlansGet200ResponsePlansValue model module.
 * @module model/PlansGet200ResponsePlansValue
 * @version 0.4.0
 */
class PlansGet200ResponsePlansValue {
    /**
     * Constructs a new <code>PlansGet200ResponsePlansValue</code>.
     * @alias module:model/PlansGet200ResponsePlansValue
     */
    constructor() { 
        
        PlansGet200ResponsePlansValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlansGet200ResponsePlansValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlansGet200ResponsePlansValue} obj Optional instance to populate.
     * @return {module:model/PlansGet200ResponsePlansValue} The populated <code>PlansGet200ResponsePlansValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlansGet200ResponsePlansValue();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('billing')) {
                obj['billing'] = ApiClient.convertToType(data['billing'], 'String');
            }
            if (data.hasOwnProperty('limits')) {
                obj['limits'] = ApiClient.convertToType(data['limits'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('api_keys')) {
                obj['api_keys'] = PlansGet200ResponsePlansValueApiKeys.constructFromObject(data['api_keys']);
            }
            if (data.hasOwnProperty('support')) {
                obj['support'] = ApiClient.convertToType(data['support'], 'String');
            }
            if (data.hasOwnProperty('monthlyPrice')) {
                obj['monthlyPrice'] = PlansGet200ResponsePlansValueMonthlyPrice.constructFromObject(data['monthlyPrice']);
            }
            if (data.hasOwnProperty('annualPrice')) {
                obj['annualPrice'] = PlansGet200ResponsePlansValueMonthlyPrice.constructFromObject(data['annualPrice']);
            }
            if (data.hasOwnProperty('discountPercentage')) {
                obj['discountPercentage'] = ApiClient.convertToType(data['discountPercentage'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlansGet200ResponsePlansValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlansGet200ResponsePlansValue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }
        // ensure the json data is a string
        if (data['billing'] && !(typeof data['billing'] === 'string' || data['billing'] instanceof String)) {
            throw new Error("Expected the field `billing` to be a primitive type in the JSON string but got " + data['billing']);
        }
        // validate the optional field `api_keys`
        if (data['api_keys']) { // data not null
          PlansGet200ResponsePlansValueApiKeys.validateJSON(data['api_keys']);
        }
        // ensure the json data is a string
        if (data['support'] && !(typeof data['support'] === 'string' || data['support'] instanceof String)) {
            throw new Error("Expected the field `support` to be a primitive type in the JSON string but got " + data['support']);
        }
        // validate the optional field `monthlyPrice`
        if (data['monthlyPrice']) { // data not null
          PlansGet200ResponsePlansValueMonthlyPrice.validateJSON(data['monthlyPrice']);
        }
        // validate the optional field `annualPrice`
        if (data['annualPrice']) { // data not null
          PlansGet200ResponsePlansValueMonthlyPrice.validateJSON(data['annualPrice']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
PlansGet200ResponsePlansValue.prototype['name'] = undefined;

/**
 * @member {String} description
 */
PlansGet200ResponsePlansValue.prototype['description'] = undefined;

/**
 * Human-friendly display price
 * @member {String} price
 */
PlansGet200ResponsePlansValue.prototype['price'] = undefined;

/**
 * Billing cadence for display (e.g., monthly, annual, one-time)
 * @member {String} billing
 */
PlansGet200ResponsePlansValue.prototype['billing'] = undefined;

/**
 * Monthly limits keyed by endpoint (e.g., 'query/nl', 'scrape', 'plot2table')
 * @member {Object.<String, Number>} limits
 */
PlansGet200ResponsePlansValue.prototype['limits'] = undefined;

/**
 * @member {module:model/PlansGet200ResponsePlansValueApiKeys} api_keys
 */
PlansGet200ResponsePlansValue.prototype['api_keys'] = undefined;

/**
 * @member {String} support
 */
PlansGet200ResponsePlansValue.prototype['support'] = undefined;

/**
 * @member {module:model/PlansGet200ResponsePlansValueMonthlyPrice} monthlyPrice
 */
PlansGet200ResponsePlansValue.prototype['monthlyPrice'] = undefined;

/**
 * @member {module:model/PlansGet200ResponsePlansValueMonthlyPrice} annualPrice
 */
PlansGet200ResponsePlansValue.prototype['annualPrice'] = undefined;

/**
 * @member {Number} discountPercentage
 */
PlansGet200ResponsePlansValue.prototype['discountPercentage'] = undefined;






export default PlansGet200ResponsePlansValue;

