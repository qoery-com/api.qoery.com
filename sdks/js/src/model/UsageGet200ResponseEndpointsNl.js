/**
 * qoery's API
 * Every number on the internet, queryable. Instant access to millions of trusted statistics through a single natural language query or API call. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: samuel.tinnerholm@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsageGet200ResponseEndpointsNl model module.
 * @module model/UsageGet200ResponseEndpointsNl
 * @version 0.1.0
 */
class UsageGet200ResponseEndpointsNl {
    /**
     * Constructs a new <code>UsageGet200ResponseEndpointsNl</code>.
     * Usage statistics for a specific endpoint
     * @alias module:model/UsageGet200ResponseEndpointsNl
     * @param callsUsed {Number} Number of calls used in current period
     * @param callsLimit {String} Maximum calls allowed in current period (returned as string)
     * @param tokensIn {Number} Total input tokens consumed in current period
     * @param tokensOut {Number} Total output tokens consumed in current period
     * @param errors {Number} Total number of errors in current period
     * @param remaining {Number} Number of calls remaining in current period
     */
    constructor(callsUsed, callsLimit, tokensIn, tokensOut, errors, remaining) { 
        
        UsageGet200ResponseEndpointsNl.initialize(this, callsUsed, callsLimit, tokensIn, tokensOut, errors, remaining);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, callsUsed, callsLimit, tokensIn, tokensOut, errors, remaining) { 
        obj['calls_used'] = callsUsed;
        obj['calls_limit'] = callsLimit;
        obj['tokens_in'] = tokensIn;
        obj['tokens_out'] = tokensOut;
        obj['errors'] = errors;
        obj['remaining'] = remaining;
    }

    /**
     * Constructs a <code>UsageGet200ResponseEndpointsNl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsageGet200ResponseEndpointsNl} obj Optional instance to populate.
     * @return {module:model/UsageGet200ResponseEndpointsNl} The populated <code>UsageGet200ResponseEndpointsNl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsageGet200ResponseEndpointsNl();

            if (data.hasOwnProperty('calls_used')) {
                obj['calls_used'] = ApiClient.convertToType(data['calls_used'], 'Number');
            }
            if (data.hasOwnProperty('calls_limit')) {
                obj['calls_limit'] = ApiClient.convertToType(data['calls_limit'], 'String');
            }
            if (data.hasOwnProperty('tokens_in')) {
                obj['tokens_in'] = ApiClient.convertToType(data['tokens_in'], 'Number');
            }
            if (data.hasOwnProperty('tokens_out')) {
                obj['tokens_out'] = ApiClient.convertToType(data['tokens_out'], 'Number');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], 'Number');
            }
            if (data.hasOwnProperty('remaining')) {
                obj['remaining'] = ApiClient.convertToType(data['remaining'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsageGet200ResponseEndpointsNl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsageGet200ResponseEndpointsNl</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UsageGet200ResponseEndpointsNl.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['calls_limit'] && !(typeof data['calls_limit'] === 'string' || data['calls_limit'] instanceof String)) {
            throw new Error("Expected the field `calls_limit` to be a primitive type in the JSON string but got " + data['calls_limit']);
        }

        return true;
    }


}

UsageGet200ResponseEndpointsNl.RequiredProperties = ["calls_used", "calls_limit", "tokens_in", "tokens_out", "errors", "remaining"];

/**
 * Number of calls used in current period
 * @member {Number} calls_used
 */
UsageGet200ResponseEndpointsNl.prototype['calls_used'] = undefined;

/**
 * Maximum calls allowed in current period (returned as string)
 * @member {String} calls_limit
 */
UsageGet200ResponseEndpointsNl.prototype['calls_limit'] = undefined;

/**
 * Total input tokens consumed in current period
 * @member {Number} tokens_in
 */
UsageGet200ResponseEndpointsNl.prototype['tokens_in'] = undefined;

/**
 * Total output tokens consumed in current period
 * @member {Number} tokens_out
 */
UsageGet200ResponseEndpointsNl.prototype['tokens_out'] = undefined;

/**
 * Total number of errors in current period
 * @member {Number} errors
 */
UsageGet200ResponseEndpointsNl.prototype['errors'] = undefined;

/**
 * Number of calls remaining in current period
 * @member {Number} remaining
 */
UsageGet200ResponseEndpointsNl.prototype['remaining'] = undefined;






export default UsageGet200ResponseEndpointsNl;

