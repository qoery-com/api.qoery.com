/**
 * qoery's API
 * Every number on the internet, queryable. Instant access to millions of trusted statistics through a single natural language query or API call. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ErrorResponse from './model/ErrorResponse';
import NLQueryRequest from './model/NLQueryRequest';
import Observation from './model/Observation';
import QueryNlPost200Response from './model/QueryNlPost200Response';
import QueryNlPost200ResponseSeriesInner from './model/QueryNlPost200ResponseSeriesInner';
import QueryNlPost200ResponseSeriesInnerObservationsInner from './model/QueryNlPost200ResponseSeriesInnerObservationsInner';
import QueryNlPost400Response from './model/QueryNlPost400Response';
import QueryResponse from './model/QueryResponse';
import SQLQueryRequest from './model/SQLQueryRequest';
import Series from './model/Series';
import URLRequest from './model/URLRequest';
import UsageGet200Response from './model/UsageGet200Response';
import UsageStats from './model/UsageStats';
import DataSourcesApi from './api/DataSourcesApi';
import QueriesApi from './api/QueriesApi';
import UsageApi from './api/UsageApi';


/**
* Every number on the internet, queryable. Instant access to millions of trusted statistics through a single natural language query or API call. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var QoerysApi = require('index'); // See note below*.
* var xxxSvc = new QoerysApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new QoerysApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new QoerysApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new QoerysApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The NLQueryRequest model constructor.
     * @property {module:model/NLQueryRequest}
     */
    NLQueryRequest,

    /**
     * The Observation model constructor.
     * @property {module:model/Observation}
     */
    Observation,

    /**
     * The QueryNlPost200Response model constructor.
     * @property {module:model/QueryNlPost200Response}
     */
    QueryNlPost200Response,

    /**
     * The QueryNlPost200ResponseSeriesInner model constructor.
     * @property {module:model/QueryNlPost200ResponseSeriesInner}
     */
    QueryNlPost200ResponseSeriesInner,

    /**
     * The QueryNlPost200ResponseSeriesInnerObservationsInner model constructor.
     * @property {module:model/QueryNlPost200ResponseSeriesInnerObservationsInner}
     */
    QueryNlPost200ResponseSeriesInnerObservationsInner,

    /**
     * The QueryNlPost400Response model constructor.
     * @property {module:model/QueryNlPost400Response}
     */
    QueryNlPost400Response,

    /**
     * The QueryResponse model constructor.
     * @property {module:model/QueryResponse}
     */
    QueryResponse,

    /**
     * The SQLQueryRequest model constructor.
     * @property {module:model/SQLQueryRequest}
     */
    SQLQueryRequest,

    /**
     * The Series model constructor.
     * @property {module:model/Series}
     */
    Series,

    /**
     * The URLRequest model constructor.
     * @property {module:model/URLRequest}
     */
    URLRequest,

    /**
     * The UsageGet200Response model constructor.
     * @property {module:model/UsageGet200Response}
     */
    UsageGet200Response,

    /**
     * The UsageStats model constructor.
     * @property {module:model/UsageStats}
     */
    UsageStats,

    /**
    * The DataSourcesApi service constructor.
    * @property {module:api/DataSourcesApi}
    */
    DataSourcesApi,

    /**
    * The QueriesApi service constructor.
    * @property {module:api/QueriesApi}
    */
    QueriesApi,

    /**
    * The UsageApi service constructor.
    * @property {module:api/UsageApi}
    */
    UsageApi
};
